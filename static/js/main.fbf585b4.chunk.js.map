{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filterCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA+BeA,G,YA5BF,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,UAC5D,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAEhC,sBAAKK,UAAU,YAAf,UACA,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBAEhCL,EAAc,EACV,oBAAGE,UAAU,mBAAb,cAAkCF,EAAYM,QAAQ,GAAtD,OACC,oBAAGJ,UAAU,qBAAb,cAAoCF,EAAYM,QAAQ,GAAxD,OAIT,oBAAGJ,UAAU,iBAAb,uBACeD,EAAUI,8BC+B1BE,MA9Cf,WAAgB,IAAD,EAEgBC,mBAAS,IAFzB,mBAEHC,EAFG,KAEIC,EAFJ,OAGkBF,mBAAS,IAH3B,mBAGHG,EAHG,KAGKC,EAHL,KAKXC,qBAAU,WACNC,IAAMC,IAAI,4HACTC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SAGdC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC9B,IAED,IAIMG,EAAcd,EAAMe,QAAO,SAAAC,GAAI,OAC/BA,EAAK9B,KAAK+B,cAAcC,SAAShB,EAAOe,kBAEjD,OACE,sBAAKxB,UAAU,WAAf,UACG,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,YAAd,+BACA,+BACE,uBAAO0B,KAAK,OAAOC,YAAY,SAAS3B,UAAU,aAAa4B,SAZnD,SAAAC,GAClBnB,EAAUmB,EAAEC,OAAOC,eAcjBV,EAAYW,KAAI,SAAAT,GACb,OACG,cAAC,EAAD,CAEE9B,KAAM8B,EAAK9B,KACXC,MAAO6B,EAAK7B,MACZC,OAAQ4B,EAAK5B,OACbI,UAAWwB,EAAKU,WAChBrC,MAAO2B,EAAKW,cACZpC,YAAayB,EAAKY,4BAClBtC,OAAQ0B,EAAKa,cAPRb,EAAKc,WC5BbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fbf585b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Coin.css';\r\n\r\nconst Coin = ({ name, image, symbol, price, volume, priceChange,marketcap }) => {\r\n    return (\r\n        <div className=\"coin-conainter\">\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <img src={image} alt=\"crypto\" />\r\n                    <h1>{name}</h1>\r\n                    <p className=\"coin-symbol\">{symbol}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                <p className=\"coin-price\">${price}</p>\r\n                <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n                   \r\n                   {priceChange < 0 ? (\r\n                        <p className=\"coin-percent red\">${priceChange.toFixed(2)}%</p>\r\n                   ) : ( <p className=\"coin-percent green\">${priceChange.toFixed(2)}%</p>)\r\n                \r\n                \r\n                }\r\n                <p className=\"coin-marketcap\">\r\n                    MKt Cap: ${marketcap.toLocaleString()}\r\n                </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Coin from './Coin';\n\n\n\n\nfunction App() {\n   \n     const [coins, setCoins] = useState([]);\n     const [search, setSearch] = useState('');\n    \n    useEffect(() =>{\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n        .then(res => {\n          setCoins(res.data);\n\n        })\n        .catch(error => console.log(error));\n    },[]);\n\n     const handleChange = e => {\n        setSearch(e.target.value)\n     }\n\n     const filterCoins = coins.filter(coin => \n           coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    <div className=\"coin-app\">\n       <div className=\"coin-search\">\n            <h1 className=\"coin-text\">Search a Currency</h1>\n            <form>\n              <input type=\"text\" placeholder=\"Search\" className=\"coin-input\" onChange={handleChange} />\n            </form>\n       </div>\n         {filterCoins.map(coin => {\n             return (\n                <Coin \n                  key={coin.id } \n                  name={coin.name } \n                  image={coin.image } \n                  symbol={coin.symbol } \n                  marketcap={coin.market_cap }\n                  price={coin.current_price } \n                  priceChange={coin.price_change_percentage_24h}\n                  volume={coin.total_volume} />\n             );\n         })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}